

services:
  db:
    image: postgis/postgis:latest
    container_name: ollama_postgis
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: tripcom_data
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - ollama_network  # Ensuring the container is in the custom network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ollama_web
    environment:
      DATABASE_URL: postgresql://myuser:mypassword@db:5432/tripcom_data
      API_KEY: AIzaSyD702s1yRxSnalEkUB9xULNqGpSYoFvDuw  # API key from .env file
    volumes:
      - ./app:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: always
    networks:
      - ollama_network  # Ensuring the container is in the custom network

  pgadmin:
    image: dpage/pgadmin4
    container_name: ollama_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@tripcom.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: always
    networks:
      - ollama_network  # Ensuring the container is in the custom network

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3000:8080"
    restart: unless-stopped
    networks:
      - ollama_network  # Ensuring the container is in the custom network

volumes:
  postgres_data:
  ollama_data:

networks:
  ollama_network:
    driver: bridge  # Explicitly defining a custom network with the bridge driver
